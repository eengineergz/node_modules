{
  "manifest": {
    "name": "eslint-plugin-jest",
    "version": "24.1.3",
    "description": "Eslint rules for Jest",
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jest-community/eslint-plugin-jest.git"
    },
    "license": "MIT",
    "author": {
      "name": "Jonathan Kim",
      "email": "hello@jkimbo.com",
      "url": "jkimbo.com"
    },
    "main": "lib/",
    "files": [
      "docs/",
      "lib/"
    ],
    "scripts": {
      "build": "babel --extensions .js,.ts src --out-dir lib --copy-files && rimraf lib/__tests__ 'lib/**/__tests__'",
      "lint": "eslint . --ignore-pattern '!.eslintrc.js' --ext js,ts",
      "prepack": "rimraf lib && yarn build",
      "prettier:check": "prettier --check 'docs/**/*.md' README.md '.github/**' package.json tsconfig.json src/globals.json .yarnrc.yml",
      "prettier:write": "prettier --write 'docs/**/*.md' README.md '.github/**' package.json tsconfig.json src/globals.json .yarnrc.yml",
      "test": "jest",
      "tools:regenerate-docs": "ts-node -T tools/regenerate-docs",
      "typecheck": "tsc -p ."
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged",
        "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS"
      }
    },
    "commitlint": {
      "extends": [
        "@commitlint/config-conventional"
      ]
    },
    "lint-staged": {
      "*.{js,ts}": "eslint --fix",
      "*.{md,json,yml}": "prettier --write"
    },
    "prettier": {
      "arrowParens": "avoid",
      "endOfLine": "auto",
      "proseWrap": "always",
      "singleQuote": true,
      "trailingComma": "all"
    },
    "jest": {
      "coverageThreshold": {
        "global": {
          "branches": 100,
          "functions": 100,
          "lines": 100,
          "statements": 100
        }
      },
      "projects": [
        {
          "displayName": "test",
          "testEnvironment": "node",
          "testPathIgnorePatterns": [
            "<rootDir>/lib/.*"
          ]
        },
        {
          "displayName": "lint",
          "runner": "jest-runner-eslint",
          "testMatch": [
            "<rootDir>/**/*.{js,ts}"
          ],
          "testPathIgnorePatterns": [
            "<rootDir>/lib/.*"
          ]
        }
      ]
    },
    "dependencies": {
      "@typescript-eslint/experimental-utils": "^4.0.1"
    },
    "devDependencies": {
      "@babel/cli": "^7.4.4",
      "@babel/core": "^7.4.4",
      "@babel/preset-env": "^7.4.4",
      "@babel/preset-typescript": "^7.3.3",
      "@commitlint/cli": "^11.0.0",
      "@commitlint/config-conventional": "^11.0.0",
      "@schemastore/package": "^0.0.6",
      "@semantic-release/changelog": "^5.0.1",
      "@semantic-release/git": "^9.0.0",
      "@types/dedent": "^0.7.0",
      "@types/jest": "^26.0.0",
      "@types/node": "^14.0.0",
      "@types/prettier": "^2.0.0",
      "@typescript-eslint/eslint-plugin": "^4.0.1",
      "@typescript-eslint/parser": "^4.0.1",
      "babel-jest": "^26.0.1",
      "babel-plugin-replace-ts-export-assignment": "^0.0.2",
      "dedent": "^0.7.0",
      "eslint": "^5.1.0 || ^6.0.0 || ^7.0.0",
      "eslint-config-prettier": "^6.5.0",
      "eslint-plugin-eslint-comments": "^3.1.2",
      "eslint-plugin-eslint-config": "^1.0.2",
      "eslint-plugin-eslint-plugin": "^2.0.0",
      "eslint-plugin-import": "^2.20.2",
      "eslint-plugin-node": "^11.0.0",
      "eslint-plugin-prettier": "^3.0.0",
      "husky": "^4.2.5",
      "jest": "^26.0.1",
      "jest-runner-eslint": "^0.10.0",
      "lint-staged": "^10.2.2",
      "prettier": "^2.0.5",
      "resolve-from": "^5.0.0",
      "rimraf": "^3.0.0",
      "semantic-release": "^17.0.7",
      "ts-node": "^9.0.0",
      "typescript": "^4.0.0"
    },
    "peerDependencies": {
      "eslint": ">=5"
    },
    "engines": {
      "node": ">=10"
    },
    "release": {
      "plugins": [
        "@semantic-release/commit-analyzer",
        "@semantic-release/release-notes-generator",
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git",
        "@semantic-release/github"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/bryan/.cache/yarn/v6/npm-eslint-plugin-jest-24.1.3-fa3db864f06c5623ff43485ca6c0e8fc5fe8ba0c-integrity/node_modules/eslint-plugin-jest/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://eslint.org/\">\n    <img width=\"150\" height=\"150\" src=\"https://eslint.org/assets/img/logo.svg\">\n  </a>\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://jestjs.io/img/jest.png\">\n  </a>\n  <h1>eslint-plugin-jest</h1>\n  <p>ESLint plugin for Jest</p>\n</div>\n\n[![Actions Status](https://github.com/jest-community/eslint-plugin-jest/workflows/Unit%20tests/badge.svg?branch=master)](https://github.com/jest-community/eslint-plugin-jest/actions)\n[![Renovate badge](https://badges.renovateapi.com/github/jest-community/eslint-plugin-jest)](https://renovatebot.com/)\n\n## Installation\n\n```\n$ yarn add --dev eslint eslint-plugin-jest\n```\n\n**Note:** If you installed ESLint globally then you must also install\n`eslint-plugin-jest` globally.\n\n## Usage\n\nAdd `jest` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"jest\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jest/no-disabled-tests\": \"warn\",\n    \"jest/no-focused-tests\": \"error\",\n    \"jest/no-identical-title\": \"error\",\n    \"jest/prefer-to-have-length\": \"warn\",\n    \"jest/valid-expect\": \"error\"\n  }\n}\n```\n\nYou can also tell ESLint about the environment variables provided by Jest by\ndoing:\n\n```json\n{\n  \"env\": {\n    \"jest/globals\": true\n  }\n}\n```\n\nThis is included in all configs shared by this plugin, so can be omitted if\nextending them.\n\nThe behaviour of some rules (specifically `no-deprecated-functions`) change\ndepending on the version of `jest` being used.\n\nThis setting is detected automatically based off the version of the `jest`\npackage installed in `node_modules`, but it can also be provided explicitly if\ndesired:\n\n```json\n{\n  \"settings\": {\n    \"jest\": {\n      \"version\": 26\n    }\n  }\n}\n```\n\n## Shareable configurations\n\n### Recommended\n\nThis plugin exports a recommended configuration that enforces good testing\npractices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/recommended\"]\n}\n```\n\n### Style\n\nThis plugin also exports a configuration named `style`, which adds some\nstylistic rules, such as `prefer-to-be-null`, which enforces usage of `toBeNull`\nover `toBe(null)`.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/style\"]\n}\n```\n\nSee\n[ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information about extending configuration files.\n\n### All\n\nIf you want to enable all rules instead of only some you can do so by adding the\n`all` configuration to your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/all\"]\n}\n```\n\nWhile the `recommended` and `style` configurations only change in major versions\nthe `all` configuration may change in any release and is thus unsuited for\ninstallations requiring long-term consistency.\n\n## Rules\n\n<!-- begin rules list -->\n\n| Rule                                                                         | Description                                                     | Configurations   | Fixable      |\n| ---------------------------------------------------------------------------- | --------------------------------------------------------------- | ---------------- | ------------ |\n| [consistent-test-it](docs/rules/consistent-test-it.md)                       | Have control over `test` and `it` usages                        |                  | ![fixable][] |\n| [expect-expect](docs/rules/expect-expect.md)                                 | Enforce assertion to be made in a test body                     | ![recommended][] |              |\n| [lowercase-name](docs/rules/lowercase-name.md)                               | Enforce lowercase test names                                    |                  | ![fixable][] |\n| [no-alias-methods](docs/rules/no-alias-methods.md)                           | Disallow alias methods                                          | ![style][]       | ![fixable][] |\n| [no-commented-out-tests](docs/rules/no-commented-out-tests.md)               | Disallow commented out tests                                    | ![recommended][] |              |\n| [no-conditional-expect](docs/rules/no-conditional-expect.md)                 | Prevent calling `expect` conditionally                          | ![recommended][] |              |\n| [no-deprecated-functions](docs/rules/no-deprecated-functions.md)             | Disallow use of deprecated functions                            | ![recommended][] | ![fixable][] |\n| [no-disabled-tests](docs/rules/no-disabled-tests.md)                         | Disallow disabled tests                                         | ![recommended][] |              |\n| [no-done-callback](docs/rules/no-done-callback.md)                           | Avoid using a callback in asynchronous tests and hooks          | ![recommended][] | ![suggest][] |\n| [no-duplicate-hooks](docs/rules/no-duplicate-hooks.md)                       | Disallow duplicate setup and teardown hooks                     |                  |              |\n| [no-export](docs/rules/no-export.md)                                         | Disallow using `exports` in files containing tests              | ![recommended][] |              |\n| [no-focused-tests](docs/rules/no-focused-tests.md)                           | Disallow focused tests                                          | ![recommended][] | ![fixable][] |\n| [no-hooks](docs/rules/no-hooks.md)                                           | Disallow setup and teardown hooks                               |                  |              |\n| [no-identical-title](docs/rules/no-identical-title.md)                       | Disallow identical titles                                       | ![recommended][] |              |\n| [no-if](docs/rules/no-if.md)                                                 | Disallow conditional logic                                      |                  |              |\n| [no-interpolation-in-snapshots](docs/rules/no-interpolation-in-snapshots.md) | Disallow string interpolation inside snapshots                  | ![recommended][] |              |\n| [no-jasmine-globals](docs/rules/no-jasmine-globals.md)                       | Disallow Jasmine globals                                        | ![recommended][] | ![fixable][] |\n| [no-jest-import](docs/rules/no-jest-import.md)                               | Disallow importing Jest                                         | ![recommended][] |              |\n| [no-large-snapshots](docs/rules/no-large-snapshots.md)                       | disallow large snapshots                                        |                  |              |\n| [no-mocks-import](docs/rules/no-mocks-import.md)                             | Disallow manually importing from `__mocks__`                    | ![recommended][] |              |\n| [no-restricted-matchers](docs/rules/no-restricted-matchers.md)               | Disallow specific matchers & modifiers                          |                  |              |\n| [no-standalone-expect](docs/rules/no-standalone-expect.md)                   | Disallow using `expect` outside of `it` or `test` blocks        | ![recommended][] |              |\n| [no-test-prefixes](docs/rules/no-test-prefixes.md)                           | Use `.only` and `.skip` over `f` and `x`                        | ![recommended][] | ![fixable][] |\n| [no-test-return-statement](docs/rules/no-test-return-statement.md)           | Disallow explicitly returning from tests                        |                  |              |\n| [prefer-called-with](docs/rules/prefer-called-with.md)                       | Suggest using `toBeCalledWith()` or `toHaveBeenCalledWith()`    |                  |              |\n| [prefer-expect-assertions](docs/rules/prefer-expect-assertions.md)           | Suggest using `expect.assertions()` OR `expect.hasAssertions()` |                  | ![suggest][] |\n| [prefer-hooks-on-top](docs/rules/prefer-hooks-on-top.md)                     | Suggest having hooks before any test cases                      |                  |              |\n| [prefer-spy-on](docs/rules/prefer-spy-on.md)                                 | Suggest using `jest.spyOn()`                                    |                  | ![fixable][] |\n| [prefer-strict-equal](docs/rules/prefer-strict-equal.md)                     | Suggest using `toStrictEqual()`                                 |                  | ![suggest][] |\n| [prefer-to-be-null](docs/rules/prefer-to-be-null.md)                         | Suggest using `toBeNull()`                                      | ![style][]       | ![fixable][] |\n| [prefer-to-be-undefined](docs/rules/prefer-to-be-undefined.md)               | Suggest using `toBeUndefined()`                                 | ![style][]       | ![fixable][] |\n| [prefer-to-contain](docs/rules/prefer-to-contain.md)                         | Suggest using `toContain()`                                     | ![style][]       | ![fixable][] |\n| [prefer-to-have-length](docs/rules/prefer-to-have-length.md)                 | Suggest using `toHaveLength()`                                  | ![style][]       | ![fixable][] |\n| [prefer-todo](docs/rules/prefer-todo.md)                                     | Suggest using `test.todo`                                       |                  | ![fixable][] |\n| [require-to-throw-message](docs/rules/require-to-throw-message.md)           | Require a message for `toThrow()`                               |                  |              |\n| [require-top-level-describe](docs/rules/require-top-level-describe.md)       | Require test cases and hooks to be inside a `describe` block    |                  |              |\n| [valid-describe](docs/rules/valid-describe.md)                               | Enforce valid `describe()` callback                             | ![recommended][] |              |\n| [valid-expect](docs/rules/valid-expect.md)                                   | Enforce valid `expect()` usage                                  | ![recommended][] |              |\n| [valid-expect-in-promise](docs/rules/valid-expect-in-promise.md)             | Enforce having return statement when testing with promises      | ![recommended][] |              |\n| [valid-title](docs/rules/valid-title.md)                                     | Enforce valid titles                                            | ![recommended][] | ![fixable][] |\n\n<!-- end rules list -->\n\n## Credit\n\n- [eslint-plugin-mocha](https://github.com/lo1tuma/eslint-plugin-mocha)\n- [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine)\n\n## Related Projects\n\n### eslint-plugin-jest-formatting\n\nThis project aims to provide formatting rules (auto-fixable where possible) to\nensure consistency and readability in jest test suites.\n\nhttps://github.com/dangreenisrael/eslint-plugin-jest-formatting\n\n[recommended]: https://img.shields.io/badge/-recommended-lightgrey.svg\n[suggest]: https://img.shields.io/badge/-suggest-yellow.svg\n[fixable]: https://img.shields.io/badge/-fixable-green.svg\n[style]: https://img.shields.io/badge/-style-blue.svg\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Jonathan Kim\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-jest/-/eslint-plugin-jest-24.1.3.tgz#fa3db864f06c5623ff43485ca6c0e8fc5fe8ba0c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-jest/-/eslint-plugin-jest-24.1.3.tgz",
    "hash": "fa3db864f06c5623ff43485ca6c0e8fc5fe8ba0c",
    "integrity": "sha512-dNGGjzuEzCE3d5EPZQ/QGtmlMotqnYWD/QpCZ1UuZlrMAdhG5rldh0N0haCvhGnUkSeuORS5VNROwF9Hrgn3Lg==",
    "registry": "npm",
    "packageName": "eslint-plugin-jest",
    "cacheIntegrity": "sha512-dNGGjzuEzCE3d5EPZQ/QGtmlMotqnYWD/QpCZ1UuZlrMAdhG5rldh0N0haCvhGnUkSeuORS5VNROwF9Hrgn3Lg== sha1-+j24ZPBsViP/Q0hcpsDo/F/ougw="
  },
  "registry": "npm",
  "hash": "fa3db864f06c5623ff43485ca6c0e8fc5fe8ba0c"
}